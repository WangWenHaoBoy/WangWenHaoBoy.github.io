<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Java博客</title>
  
  <subtitle>记录自己每一个脚印</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://javazhan.com/"/>
  <updated>2018-11-12T10:56:20.406Z</updated>
  <id>https://javazhan.com/</id>
  
  <author>
    <name>王文昊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客搭建(一：hexo环境搭建)</title>
    <link href="https://javazhan.com/2018/11/12/2018-11-12-1-hexo/"/>
    <id>https://javazhan.com/2018/11/12/2018-11-12-1-hexo/</id>
    <published>2018-11-11T16:00:00.000Z</published>
    <updated>2018-11-12T10:56:20.406Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装Git-Bash"><a href="#1-安装Git-Bash" class="headerlink" title="1.安装Git Bash"></a>1.安装Git Bash</h3><p>我一直不太喜欢在cmd中操作各种命令，所以挑了这个比较好使的Git Bash, 我的是windows环境，所以下载windows版本并安装就可以了。</p><ol><li><a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">下载地址</a></li><li>安装步骤：双击下载好的exe文件，一路next就好啦</li><li>安装好后，打开gitbash，查看版本：用命令 <code>git version</code><br><img src="https://javazhan.com/images/hexo/2018-11-12/0.png" alt=""><h3 id="2-安装NodeJs"><a href="#2-安装NodeJs" class="headerlink" title="2.安装NodeJs"></a>2.安装NodeJs</h3>Hexo是基于nodeJS环境的静态博客，里面的npm工具很有用啊，所以还是老老实实把这玩意儿装了吧。</li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载地址</a></li><li>安装步骤：反正下载好msi文件后，双击打开安装，也是一路next，不过在Custom Setup这一步记得选 Add to PATH ,这样你就不用自己去配置电脑上环境变量了，装完在按 <code>win + r</code> 快捷键调出运行，然后输入cmd确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量），没有的话你就自由发挥吧。</li><li>查看版本：用命令 <code>node -v</code><br><img src="https://javazhan.com/images/hexo/2018-11-12/1.png" alt=""><h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h3>看到这么多安装，千万不要紧张，小哥哥小姐姐们一定要稳住，别怕，因为后面的东西都是在gitbash中用npm工具安装就好了。</li><li>先创建一个文件夹（用来存放所有blog的东西），然后cd到该文件夹下。</li><li>安装hexo命令：npm i -g hexo</li><li>安装完成后，查看版本：用命令 <code>hexo -v</code><br><img src="https://javazhan.com/images/hexo/2018-11-12/2.png" alt=""></li><li>初始化命令：<code>hexo init</code> ，初始化完成之后打开所在的文件夹可以看到以下文件：<br><img src="https://javazhan.com/images/hexo/2018-11-12/3.png" alt=""></li><li>解释一下</li></ol><ul><li>node_modules：是依赖包</li><li>public：存放的是生成的页面</li><li>scaffolds：命令生成文章等的模板</li><li>source：用命令创建的各种文章</li><li>themes：主题</li><li>_config.yml：整个博客的配置</li><li>db.json：source解析所得到的</li><li>package.json：项目所需模块项目的配置信息</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装Git-Bash&quot;&gt;&lt;a href=&quot;#1-安装Git-Bash&quot; class=&quot;headerlink&quot; title=&quot;1.安装Git Bash&quot;&gt;&lt;/a&gt;1.安装Git Bash&lt;/h3&gt;&lt;p&gt;我一直不太喜欢在cmd中操作各种命令，所以挑了这个比较好使的
      
    
    </summary>
    
      <category term="前端" scheme="https://javazhan.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="https://javazhan.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建(二：Windows下如何使用gitbash管理github)</title>
    <link href="https://javazhan.com/2018/11/12/2018-11-12-2-hexo/"/>
    <id>https://javazhan.com/2018/11/12/2018-11-12-2-hexo/</id>
    <published>2018-11-11T16:00:00.000Z</published>
    <updated>2018-11-12T11:51:25.948Z</updated>
    
    <content type="html"><![CDATA[<h3 id="4-创建github-Reponsitory"><a href="#4-创建github-Reponsitory" class="headerlink" title="4.创建github Reponsitory"></a>4.创建github Reponsitory</h3><ol><li>首先,创建一个reponsitory如下图:<br><img src="https://javazhan.com/images/hexo/2018-11-12/4.png" alt=""><br>注意下图中的Owner其实就是账户名WangWenHaoBo,Repository name中一定要符合 账户名.github.io，否则无效,另外还要记住勾选Initialize this repository with a README<br><img src="https://javazhan.com/images/hexo/2018-11-12/5.png" alt=""><h3 id="5-配置一下gitbash和github的通信协议"><a href="#5-配置一下gitbash和github的通信协议" class="headerlink" title="5.配置一下gitbash和github的通信协议"></a>5.配置一下gitbash和github的通信协议</h3></li><li>首先打开刚刚安装好的gitbash,界面如下:<br><img src="https://javazhan.com/images/hexo/2018-11-12/6.png" alt=""></li><li>配置gitbash和github的通信协议<br>先输入ssh-keygen –t rsa –C “邮箱地址” 然后一直按回车回车回车回车。。。。箭头指向的邮箱填写我当时填的是和github上写的邮箱一致。<br><img src="https://javazhan.com/images/hexo/2018-11-12/7.png" alt=""></li><li>然后你就可以根据上图提示信息打开文件目录，找到那个文件<br><img src="https://javazhan.com/images/hexo/2018-11-12/8.png" alt=""></li><li>用文本方式打开.pub文件。直接全选复制。用文本方式打开.pub文件。直接全选复制。用文本方式打开.pub文件。直接全选复制。重要的事情说三遍。<br>然后打开github自己的主页Settings-&gt;SSH-&gt;newSSHkey<br>不懂看下面的图：<br><img src="https://javazhan.com/images/hexo/2018-11-12/9.png" alt=""></li></ol><p><img src="https://javazhan.com/images/hexo/2018-11-12/10.png" alt=""></p><p><img src="https://javazhan.com/images/hexo/2018-11-12/11.png" alt=""><br>刚刚全选复制的密钥就复制到Key哪里，title随便起。<br><img src="https://javazhan.com/images/hexo/2018-11-12/12.png" alt=""><br>接下来要验证设置！<br>输入命令：ssh –T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>，问你yes or no，就输入yes，回车完事<br><img src="https://javazhan.com/images/hexo/2018-11-12/13.png" alt=""><br>配置gitbash的用户名和邮箱：<br>git config –-global user.name “用户名”<br>git config –-global user.email “邮箱”<br>用户名邮箱，用你github上的用户名和邮箱。 </p><h3 id="将你刚刚在github上创建的project和本地联系起来。"><a href="#将你刚刚在github上创建的project和本地联系起来。" class="headerlink" title="将你刚刚在github上创建的project和本地联系起来。"></a>将你刚刚在github上创建的project和本地联系起来。</h3><ol><li>大致说下大概先，就是先在本地找个空的文件夹，然后用gitbash初始化一下这个文件夹的信息，使他变成一个类似于可以被管理的仓库，然后再从远程仓库github上pull上面的东西下来这个文件夹，然后自己修改好了，再push回去远程github，就这么简单。<br>话不多说看图：<br><img src="https://javazhan.com/images/hexo/2018-11-12/14.png" alt=""><br>我在D盘新建了一个名字为git2的文件夹，空的，啥都没有。<br>然后用gitbash打开这个文件夹：<br>具体命令就是cd 路径<br><img src="https://javazhan.com/images/hexo/2018-11-12/15.png" alt=""><br>接下来就是git init:<br><img src="https://javazhan.com/images/hexo/2018-11-12/16.png" alt=""><br>好了，本地的仓库做好了，是时候把远程仓库的东西拉下来了：<br>命令：git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:你的git<br><img src="https://javazhan.com/images/hexo/2018-11-12/17.png" alt=""></li></ol><p><img src="https://javazhan.com/images/hexo/2018-11-12/18.png" alt=""><br>连接上之后，用pull:<br>命令：<br>git pull <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:你的git<br><img src="https://javazhan.com/images/hexo/2018-11-12/19.png" alt=""><br>我这里显示是Already up-to-date，因为我之前已经pull过一次了，你的可能不一样。然后你会发现<br>你的本地仓库文件多了一个.md文件<br><img src="https://javazhan.com/images/hexo/2018-11-12/21.png" alt=""><br>好了，这时候你要怎么把你想传的东西传到github上？<br>比如我新建一个test文档，里面的内容是11111.自己手动新建的，手动，就是直接新建的小伙子。<br>然后我们需要大概就是三个步骤就可以把这个test文件送到github上，<br>git add-&gt;git commit-&gt;git push<br>/////////////////////////////////////////////////////////<br>完整写法看图：<br>每一个$后面的就是我打的命令，当然git add后面跟一个.代表把所有文件都加进去，单独给出特定的文件名字就加特定的文件。<br><img src="https://javazhan.com/images/hexo/2018-11-12/22.png" alt=""><br>然后你就会发现你的github上就多个了文件了<br><img src="https://javazhan.com/images/hexo/2018-11-12/23.png" alt=""><br>后来你想修改的话，就一样的操作啊，pull下来<br>手动修改，add，commit，push。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;4-创建github-Reponsitory&quot;&gt;&lt;a href=&quot;#4-创建github-Reponsitory&quot; class=&quot;headerlink&quot; title=&quot;4.创建github Reponsitory&quot;&gt;&lt;/a&gt;4.创建github Reponsito
      
    
    </summary>
    
      <category term="前端" scheme="https://javazhan.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="https://javazhan.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建(三：在github上部署hexo主题)</title>
    <link href="https://javazhan.com/2018/11/12/2018-11-12-3-hexo/"/>
    <id>https://javazhan.com/2018/11/12/2018-11-12-3-hexo/</id>
    <published>2018-11-11T16:00:00.000Z</published>
    <updated>2018-11-12T11:40:56.251Z</updated>
    
    <content type="html"><![CDATA[<h3 id="寻找主题"><a href="#寻找主题" class="headerlink" title="寻找主题"></a>寻找主题</h3><ol><li>你可以到<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网主题页</a>上去寻找自己想要的那种风格的hexo主题,每个主题作者都会有在github上的链接,一般链接会放在About页中,这里我以MiHo主题进行讲解。<br>点击About:<br><img src="https://javazhan.com/images/hexo/2018-11-12/24.png" alt=""><br>找到github链接,点击该链接:<br><img src="https://javazhan.com/images/hexo/2018-11-12/25.png" alt=""><br>在跳转页面的overview中可以看到有hexo-theme-miho,点击hexo-theme-miho<br><img src="https://javazhan.com/images/hexo/2018-11-12/26.png" alt=""><br>点解clone or download,让后将网址复制下来:<br><img src="https://javazhan.com/images/hexo/2018-11-12/27.png" alt=""><br>打开gitbash进入到hexo初始化的那个blog页面执行git clone 复制的网址 themes/小写主题名称,然后回车执行命令,执行命令完,你会在blog中themes文件中发现多了一个小写主题名称(我这里是miho)的文件夹,这样就把复制的主题保存到了themes中。<br><img src="https://javazhan.com/images/hexo/2018-11-12/28.png" alt=""><br>接下来就是调整themes中_config.yml中的一些配置<br>这些都做完了，接下来应该怎么办呢？<br>接下来就是将本地的静态博客部署到gitHub上，要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件，可以实现如下命令：</li></ol><ul><li>npm install hexo -server –save</li><li>npm install hexo-deployer-git –save<br>编辑全局 hexo 的配置文件：_config.yml，这块可以参照网上的。</li><li>编辑全局配置后我们需要重新部署：</li><li>先清除掉已经生成的旧文件：hexo clean</li><li>再生成一次静态文件：hexo generate</li><li>在本地预览下：hexo server本地没问题之后，访问<a href="http://localhost:4000,如果成功了,Ctrl" target="_blank" rel="noopener">http://localhost:4000,如果成功了,Ctrl</a> + C 停掉本地预览</li><li>使用部署命令部署到 Github 上：hexo deploy,如有弹出如下提示框，请输入：yes<br><img src="https://javazhan.com/images/hexo/2018-11-12/28.png" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;寻找主题&quot;&gt;&lt;a href=&quot;#寻找主题&quot; class=&quot;headerlink&quot; title=&quot;寻找主题&quot;&gt;&lt;/a&gt;寻找主题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;你可以到&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; re
      
    
    </summary>
    
      <category term="前端" scheme="https://javazhan.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="https://javazhan.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>我是一个新标题1</title>
    <link href="https://javazhan.com/2017/06/18/ceshi/"/>
    <id>https://javazhan.com/2017/06/18/ceshi/</id>
    <published>2017-06-17T16:00:00.000Z</published>
    <updated>2018-11-12T05:30:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>我是一个新摘要1费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我是一个新摘要2费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我是一个新摘要3费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我是一个新摘要4费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分</p><h1 id="我是一个新内容"><a href="#我是一个新内容" class="headerlink" title="我是一个新内容"></a>我是一个新内容</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我是一个新摘要1费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我是一个新摘要2费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我
      
    
    </summary>
    
      <category term="新分类1" scheme="https://javazhan.com/categories/%E6%96%B0%E5%88%86%E7%B1%BB1/"/>
    
    
      <category term="新标签一1" scheme="https://javazhan.com/tags/%E6%96%B0%E6%A0%87%E7%AD%BE%E4%B8%801/"/>
    
      <category term="新标签二1" scheme="https://javazhan.com/tags/%E6%96%B0%E6%A0%87%E7%AD%BE%E4%BA%8C1/"/>
    
  </entry>
  
</feed>
