{"meta":{"title":"Java博客","subtitle":"记录自己每一个脚印","description":"我的个人站，主要涉及前后端端知识共享、实践教程、前沿技术共同学习等方面","author":"王文昊","url":"https://javazhan.com"},"pages":[{"title":"categories","date":"2018-11-12T10:09:35.853Z","updated":"2018-11-09T08:20:36.000Z","comments":false,"path":"categories/index.html","permalink":"https://javazhan.com/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2016-01-31T14:10:28.000Z","updated":"2018-11-11T13:18:08.000Z","comments":true,"path":"about/index.html","permalink":"https://javazhan.com/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-11-12T10:09:35.862Z","updated":"2018-11-09T08:20:20.000Z","comments":false,"path":"tags/index.html","permalink":"https://javazhan.com/tags/index.html","excerpt":"","text":""},{"title":"留言","date":"2016-02-01T12:29:57.000Z","updated":"2018-11-09T13:55:04.000Z","comments":true,"path":"comment/index.html","permalink":"https://javazhan.com/comment/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo博客搭建(一：hexo环境搭建)","slug":"2018-11-12-1-hexo","date":"2018-11-11T16:00:00.000Z","updated":"2018-11-12T10:56:20.406Z","comments":true,"path":"2018/11/12/2018-11-12-1-hexo/","link":"","permalink":"https://javazhan.com/2018/11/12/2018-11-12-1-hexo/","excerpt":"","text":"1.安装Git Bash我一直不太喜欢在cmd中操作各种命令，所以挑了这个比较好使的Git Bash, 我的是windows环境，所以下载windows版本并安装就可以了。 下载地址 安装步骤：双击下载好的exe文件，一路next就好啦 安装好后，打开gitbash，查看版本：用命令 git version2.安装NodeJsHexo是基于nodeJS环境的静态博客，里面的npm工具很有用啊，所以还是老老实实把这玩意儿装了吧。 下载地址 安装步骤：反正下载好msi文件后，双击打开安装，也是一路next，不过在Custom Setup这一步记得选 Add to PATH ,这样你就不用自己去配置电脑上环境变量了，装完在按 win + r 快捷键调出运行，然后输入cmd确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量），没有的话你就自由发挥吧。 查看版本：用命令 node -v3.安装hexo看到这么多安装，千万不要紧张，小哥哥小姐姐们一定要稳住，别怕，因为后面的东西都是在gitbash中用npm工具安装就好了。 先创建一个文件夹（用来存放所有blog的东西），然后cd到该文件夹下。 安装hexo命令：npm i -g hexo 安装完成后，查看版本：用命令 hexo -v 初始化命令：hexo init ，初始化完成之后打开所在的文件夹可以看到以下文件： 解释一下 node_modules：是依赖包 public：存放的是生成的页面 scaffolds：命令生成文章等的模板 source：用命令创建的各种文章 themes：主题 _config.yml：整个博客的配置 db.json：source解析所得到的 package.json：项目所需模块项目的配置信息","categories":[{"name":"前端","slug":"前端","permalink":"https://javazhan.com/categories/前端/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://javazhan.com/tags/Hexo/"}]},{"title":"Hexo博客搭建(二：Windows下如何使用gitbash管理github)","slug":"2018-11-12-2-hexo","date":"2018-11-11T16:00:00.000Z","updated":"2018-11-12T11:51:25.948Z","comments":true,"path":"2018/11/12/2018-11-12-2-hexo/","link":"","permalink":"https://javazhan.com/2018/11/12/2018-11-12-2-hexo/","excerpt":"","text":"4.创建github Reponsitory 首先,创建一个reponsitory如下图:注意下图中的Owner其实就是账户名WangWenHaoBo,Repository name中一定要符合 账户名.github.io，否则无效,另外还要记住勾选Initialize this repository with a README5.配置一下gitbash和github的通信协议 首先打开刚刚安装好的gitbash,界面如下: 配置gitbash和github的通信协议先输入ssh-keygen –t rsa –C “邮箱地址” 然后一直按回车回车回车回车。。。。箭头指向的邮箱填写我当时填的是和github上写的邮箱一致。 然后你就可以根据上图提示信息打开文件目录，找到那个文件 用文本方式打开.pub文件。直接全选复制。用文本方式打开.pub文件。直接全选复制。用文本方式打开.pub文件。直接全选复制。重要的事情说三遍。然后打开github自己的主页Settings-&gt;SSH-&gt;newSSHkey不懂看下面的图： 刚刚全选复制的密钥就复制到Key哪里，title随便起。接下来要验证设置！输入命令：ssh –T git@github.com，问你yes or no，就输入yes，回车完事配置gitbash的用户名和邮箱：git config –-global user.name “用户名”git config –-global user.email “邮箱”用户名邮箱，用你github上的用户名和邮箱。 将你刚刚在github上创建的project和本地联系起来。 大致说下大概先，就是先在本地找个空的文件夹，然后用gitbash初始化一下这个文件夹的信息，使他变成一个类似于可以被管理的仓库，然后再从远程仓库github上pull上面的东西下来这个文件夹，然后自己修改好了，再push回去远程github，就这么简单。话不多说看图：我在D盘新建了一个名字为git2的文件夹，空的，啥都没有。然后用gitbash打开这个文件夹：具体命令就是cd 路径接下来就是git init:好了，本地的仓库做好了，是时候把远程仓库的东西拉下来了：命令：git remote add origin git@github.com:你的git 连接上之后，用pull:命令：git pull git@github.com:你的git我这里显示是Already up-to-date，因为我之前已经pull过一次了，你的可能不一样。然后你会发现你的本地仓库文件多了一个.md文件好了，这时候你要怎么把你想传的东西传到github上？比如我新建一个test文档，里面的内容是11111.自己手动新建的，手动，就是直接新建的小伙子。然后我们需要大概就是三个步骤就可以把这个test文件送到github上，git add-&gt;git commit-&gt;git push/////////////////////////////////////////////////////////完整写法看图：每一个$后面的就是我打的命令，当然git add后面跟一个.代表把所有文件都加进去，单独给出特定的文件名字就加特定的文件。然后你就会发现你的github上就多个了文件了后来你想修改的话，就一样的操作啊，pull下来手动修改，add，commit，push。","categories":[{"name":"前端","slug":"前端","permalink":"https://javazhan.com/categories/前端/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://javazhan.com/tags/Hexo/"}]},{"title":"Hexo博客搭建(三：在github上部署hexo主题)","slug":"2018-11-12-3-hexo","date":"2018-11-11T16:00:00.000Z","updated":"2018-11-12T11:40:56.251Z","comments":true,"path":"2018/11/12/2018-11-12-3-hexo/","link":"","permalink":"https://javazhan.com/2018/11/12/2018-11-12-3-hexo/","excerpt":"","text":"寻找主题 你可以到hexo官网主题页上去寻找自己想要的那种风格的hexo主题,每个主题作者都会有在github上的链接,一般链接会放在About页中,这里我以MiHo主题进行讲解。点击About:找到github链接,点击该链接:在跳转页面的overview中可以看到有hexo-theme-miho,点击hexo-theme-miho点解clone or download,让后将网址复制下来:打开gitbash进入到hexo初始化的那个blog页面执行git clone 复制的网址 themes/小写主题名称,然后回车执行命令,执行命令完,你会在blog中themes文件中发现多了一个小写主题名称(我这里是miho)的文件夹,这样就把复制的主题保存到了themes中。接下来就是调整themes中_config.yml中的一些配置这些都做完了，接下来应该怎么办呢？接下来就是将本地的静态博客部署到gitHub上，要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件，可以实现如下命令： npm install hexo -server –save npm install hexo-deployer-git –save编辑全局 hexo 的配置文件：_config.yml，这块可以参照网上的。 编辑全局配置后我们需要重新部署： 先清除掉已经生成的旧文件：hexo clean 再生成一次静态文件：hexo generate 在本地预览下：hexo server本地没问题之后，访问http://localhost:4000,如果成功了,Ctrl + C 停掉本地预览 使用部署命令部署到 Github 上：hexo deploy,如有弹出如下提示框，请输入：yes","categories":[{"name":"前端","slug":"前端","permalink":"https://javazhan.com/categories/前端/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://javazhan.com/tags/Hexo/"}]},{"title":"我是一个新标题1","slug":"ceshi","date":"2017-06-17T16:00:00.000Z","updated":"2018-11-12T05:30:54.000Z","comments":true,"path":"2017/06/18/ceshi/","link":"","permalink":"https://javazhan.com/2017/06/18/ceshi/","excerpt":"","text":"我是一个新摘要1费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我是一个新摘要2费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我是一个新摘要3费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分我是一个新摘要4费附加按时交付撒富兰克林奇偶为江湖梦阔怕老大哥跑得快日投票记得吗这一个衣服撒即可吗发发看顾客考法拉克麻辣面风格更好二等分 我是一个新内容","categories":[{"name":"新分类1","slug":"新分类1","permalink":"https://javazhan.com/categories/新分类1/"}],"tags":[{"name":"新标签一1","slug":"新标签一1","permalink":"https://javazhan.com/tags/新标签一1/"},{"name":"新标签二1","slug":"新标签二1","permalink":"https://javazhan.com/tags/新标签二1/"}]}]}